apartado a)
datos_poblacion = crecimiento_por_pais_anno('population.csv')
crecimiento_por_pais_anno('no_esta.csv')
crecimiento_por_pais_anno('Untitled.ipynb')
crecimiento_por_pais_anno('sin_contenido.csv')

apartado b)
obtener_poblacion_paises(datos_poblacion, {"Spain"})
obtener_poblacion_paises(datos_poblacion, {"Spain", "France"})
obtener_poblacion_paises(datos_poblacion, {"Spain", "No existe"})
obtener_poblacion_paises(datos_poblacion, {})
obtener_poblacion_paises({}, {"Spain"})

obtener_poblacion_annos(datos_poblacion, set(range(2007,2016)))
obtener_poblacion_annos(datos_poblacion, {-10000,2008,2009})
obtener_poblacion_annos(datos_poblacion, {2})
obtener_poblacion_annos({}, {2014})

obtener_poblacion_paises_annos(datos_poblacion, {"Spain"}, {1800})
obtener_poblacion_paises_annos(datos_poblacion, {"World"}, set(range(-10000, 0)))
obtener_poblacion_paises_annos(datos_poblacion, {"Spain", "World"}, {-10000, 1800, 1900})
obtener_poblacion_paises_annos(datos_poblacion, {"Spain", "No existe"}, {-10000, 1800, 1900})
obtener_poblacion_paises_annos(datos_poblacion, {}, {-10000, 1800, 1900})

evolucion_poblacion(datos_poblacion.get('Europe'), 2009, 2010)
evolucion_poblacion(datos_poblacion.get('Europe'), 2009, 2016)
evolucion_poblacion(datos_poblacion.get('Europe'), 2009, 2022)
evolucion_poblacion(datos_poblacion.get('No existe'), 2009, 2019)
evolucion_poblacion(datos_poblacion, 2009, 2019)

apartado c)
obtener_poblacion_paises_annos(datos_poblacion, {"Spain"}, {1800})
obtener_poblacion_paises_annos(datos_poblacion, {"World"}, set(range(-10000, 0)))
obtener_poblacion_paises_annos(datos_poblacion, {"Spain", "World"}, {-10000, 1800, 1900})
obtener_poblacion_paises_annos(datos_poblacion, {"Spain", "No existe"}, {-10000, 1800, 1900})
obtener_poblacion_paises_annos(datos_poblacion, {}, {-10000, 1800, 1900})(datos_poblacion, "all", 2007, 2016)

generar_tabla_poblacion(datos_poblacion, "Spain", 2007, 2016)
generar_tabla_poblacion(datos_poblacion, "Spain", 2007, 2005)
generar_tabla_poblacion(datos_poblacion, "No existe", 2007, 2016)
generar_tabla_poblacion({}, "Spain", 2007, 2016)

apartado d)
df_evolucion_poblacion_pais = generar_tabla_poblacion(datos_poblacion, "Spain", 2007, 2016)
df_evolucion_poblacion_mundial = generar_tabla_poblacion(datos_poblacion, "World", 2007, 2016)

mostrar_comparacion(df_evolucion_poblacion_pais, df_evolucion_poblacion_mundial)

df_evolucion_poblacion_pais = generar_tabla_poblacion(datos_poblacion, "France", 2007, 2016)
mostrar_comparacion(df_evolucion_poblacion_pais, df_evolucion_poblacion_mundial)

mostrar_comparacion(pd.DataFrame({"A":[]}), df_evolucion_poblacion_mundial)

apartado e)
df_causas_mortalidad = causas_muerte_pais_anno('annual-number-of-deaths-by-cause.csv')
causas_muerte_pais_anno('no_existe.csv')
causas_muerte_pais_anno('Untitled.ipynb')
causas_muerte_pais_anno('sin_contenido.csv')

filtrar_tabla(df_causas_mortalidad, "Year", {1998,1999})
filtrar_tabla(df_causas_mortalidad, "Year", {1998,-10000})
filtrar_tabla(df_causas_mortalidad, "Year", {})
filtrar_tabla(df_causas_mortalidad, "Entity", {"Spain", "France", "Italy"})
filtrar_tabla(df_causas_mortalidad, "No existe", {1998})
filtrar_tabla(pd.DataFrame({"A":[]}), "Year", {1998,1999})

evolucion_mortalidad(df_causas_mortalidad)
evolucion_mortalidad(df_causas_mortalidad.iloc[:,3:])

df_causas_mortalidad['Number of executions (Amnesty International)'] = eliminar_caracter(df_causas_mortalidad['Number of executions (Amnesty International)'], '[>]+')

evolucion_mortalidad(df_causas_mortalidad.iloc[:,3:])
evolucion_mortalidad(df_causas_mortalidad.iloc[:,4:5])

apartado f)
calcular_tasa_fallecimiento(df_causas_mortalidad, datos_poblacion, "Spain", 2015, "- Road injuries -",10000)
calcular_tasa_fallecimiento(df_causas_mortalidad, datos_poblacion, "China", 2015, "Number of executions (Amnesty International)",10000)
calcular_tasa_fallecimiento(df_causas_mortalidad, datos_poblacion, "France", 1995, "- Poisonings -",10000)
calcular_tasa_fallecimiento(df_causas_mortalidad, datos_poblacion, "No existe", 1995, "- Poisoning -",1000)
calcular_tasa_fallecimiento(df_causas_mortalidad, datos_poblacion, "France", 1995, "No existe",10000)
calcular_tasa_fallecimiento(df_causas_mortalidad, datos_poblacion, "France", 2019, "- Poisoning -",-10000)

apartado g)
df_causas_mortalidad = eliminar_filas(df_causas_mortalidad, 'Entity', 'columnas.txt')
df_causas_mortalidad =  eliminar_ceros(df_causas_mortalidad, set(df_causas_mortalidad.columns[3:]))
comparar_mortalidad(df_causas_mortalidad, datos_poblacion, {"Spain", "France", "Germany", "United States"}, 1998, "- Poisonings -" ,10000)
comparar_mortalidad(df_causas_mortalidad, datos_poblacion, {"Taiwan", "India", "China", "United States"}, 1998, "- Poisonings -" ,100000)
comparar_mortalidad(df_causas_mortalidad, datos_poblacion, {"Taiwan", "Spain", "World", "United States", "Afghanistan"}, 2009, "- Road injuries -" ,10000)
comparar_mortalidad(df_causas_mortalidad, datos_poblacion, {"Taiwan", "Spain", "World", "United States", "Afghanistan"}, 2020, "- Road injuries -" ,10000)
comparar_mortalidad(df_causas_mortalidad, datos_poblacion, {"No existe", "Spain", "World", "United States", "Afghanistan"}, 2009, "- Road injuries -" ,-10000)
comparar_mortalidad(df_causas_mortalidad, datos_poblacion, {"Taiwan", "Spain", "World", "United States", "Afghanistan"}, 2016, "No existe" ,10000)

apartado h)
suma_causas_fallecimientos(df_causas_mortalidad, 1998, set(df_causas_mortalidad.columns[3:]))
suma_causas_fallecimientos(df_causas_mortalidad, 2008, set(df_causas_mortalidad.columns[3:]))
suma_causas_fallecimientos(df_causas_mortalidad, 1998, set(df_causas_mortalidad.columns[25:]))
suma_causas_fallecimientos(df_causas_mortalidad, 1998, {"- Road injuries -", "- Interpersonal violence -"})
suma_causas_fallecimientos(df_causas_mortalidad, 1998, {"- Road injuries -", "No existe"})
suma_causas_fallecimientos(df_causas_mortalidad, 2020, {"- Road injuries -", "- Interpersonal violence -"})




